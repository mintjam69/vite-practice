{"version":3,"file":"login.js","sources":["../src/js/refs.js","../src/js/storage.js","../src/js/login.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector(\".login-form\"),\n    inputEmail: document.querySelector(\"[name='email']\"),\n    inputPassword: document.querySelector(\"[name='password']\"),\n    buttonFirst: document.querySelector(\".login-form button\"),\n}\n\n","export function saveInLS(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n","// Перед вами форма для авторизації на сайті (правильні дані для входу збережені в обʼєкті USER_DATA)\n\n// Розбийте код на кілька файлів:\n// storage.js - функції для роботи зі сховищем;\n// refs.js - посилання на всі потрібні елементи в html;\n// main.js - головний файл, де вся основна логіка додатка.\n\n// Ви маєте додати перевірку введених даних при сабміті:\n// Якщо введені дані не збігаються зі збереженими, викликайте аlert і\n// повідомляйте про помилку.\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми\n// у локальне сховище і змінюйте кнопку Login на Logout, також робіть поля введення\n// недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач авторизован, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// з локального сховища.\n\nimport { refs } from './refs';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { saveInLS } from './storage';\nconsole.log(refs);\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst LS_KEY = 'user-data';\n\nrefs.form.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const emailValue = event.target.elements.email.value.trim();\n  const passwordValue = event.target.elements.password.value.trim();\n\n  if (emailValue === '' || passwordValue === '') {\n    iziToast.warning({\n      message: 'Fill all fields!',\n      position: 'topRight',\n    });\n    return;\n  }\n  if (emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Invalid data!',\n      position: 'topRight',\n    });\n    return;\n  }\n  saveInLS(LS_KEY, { email: emailValue, password: passwordValue });\n  refs.buttonFirst.textContent = 'Logout';\n  refs.inputEmail.setAttribute('readonly', true);\n  refs.inputPassword.setAttribute('readonly', true);\n  console.log(emailValue, passwordValue);\n}\n"],"names":["refs","saveInLS","key","data","USER_DATA","LS_KEY","onFormSubmit","event","emailValue","passwordValue","iziToast"],"mappings":"0xBAAO,MAAMA,EAAO,CAChB,KAAM,SAAS,cAAc,aAAa,EAC1C,WAAY,SAAS,cAAc,gBAAgB,EACnD,cAAe,SAAS,cAAc,mBAAmB,EACzD,YAAa,SAAS,cAAc,oBAAoB,CAC5D,ECLO,SAASC,EAASC,EAAKC,EAAM,CAClC,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAI,CAAC,CAChD,CCqBA,QAAQ,IAAIH,CAAI,EAEhB,MAAMI,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAS,YAEfL,EAAK,KAAK,iBAAiB,SAAUM,CAAY,EACjD,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MAAM,MAAM,OAC/CE,EAAgBF,EAAM,OAAO,SAAS,SAAS,MAAM,OAE3D,GAAIC,IAAe,IAAMC,IAAkB,GAAI,CAC7CC,EAAS,QAAQ,CACf,QAAS,mBACT,SAAU,UAChB,CAAK,EACD,MACD,CACD,GAAIF,IAAeJ,EAAU,OAASK,IAAkBL,EAAU,SAAU,CAC1EM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gBACT,SAAU,UAChB,CAAK,EACD,MACD,CACDT,EAASI,EAAQ,CAAE,MAAOG,EAAY,SAAUC,CAAa,CAAE,EAC/DT,EAAK,YAAY,YAAc,SAC/BA,EAAK,WAAW,aAAa,WAAY,EAAI,EAC7CA,EAAK,cAAc,aAAa,WAAY,EAAI,EAChD,QAAQ,IAAIQ,EAAYC,CAAa,CACvC"}