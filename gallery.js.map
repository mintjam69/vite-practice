{"version":3,"file":"gallery.js","sources":["../src/js/module-12/UnsplashAPI.js","../src/js/module-12/createGalleryCard.js","../src/js/module-12/gallery.js"],"sourcesContent":["import axios from 'axios';\n\nexport class UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #API_KEY = 'gcevo00lZKvSMKLnZZJPKYS5xNbpbsP_4i6E-BVlG58';\n  #query = '';\n\n  async fetchPopularPhotos(page) {\n    try {\n      const { data } = await axios(this.#BASE_URL, {\n        params: {\n          query: 'popular',\n          per_page: 12,\n          page,\n          orientation: 'portrait',\n          client_id: this.#API_KEY,\n        },\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchPhotosByQuery(page) {\n    try {\n      const { data } = await axios(this.#BASE_URL, {\n        params: {\n          query: this.#query,\n          per_page: 12,\n          page,\n          orientation: 'portrait',\n          client_id: this.#API_KEY,\n        },\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n}\n","export function createGalleryCard(arr) {\n  return arr\n    .map(({ alt_description, urls: { small }, description }) => {\n      return `\n          <li class=\"gallery-item\">\n            <img src=\"${small}\" alt=\"${alt_description}\" class=\"gallery-img\" />\n            <p class=\"gallery-image-descr\">${alt_description}</p>\n          </li>\n    `;\n    })\n    .join('');\n}\n","// Створи додаток для пошуку зображень по ключовому слову.\n// При завантаженні сторінки має відбуватись запит за популярними зображеннями (ключове слово - popular),\n// а при введенні якогось слова в форму - пошук відбувається по цьому ключовому слову і сторінка перемальовується.\n\n// Використовуй UnsplashAPI (https://unsplash.com/documentation) для запитів. Створи клас UnsplashAPI для інкапсуляції\n// логіки запитів в одному місті в окремому файлі.\n// Створи окремо файл createGalleryCard.js,\n// в якому буде функція, що відповідатиме за створення розмітки.\n// В головному файлі gallery.js має бути вся логіка роботи застосунку.\n\n// Підключи пагінацію, використовуючи бібліотеку tui-pagination, щоб можна було робити запит за різними сторінками.\n// Додай слухача на форму, щоб робити новий запит по ключовому слову (додавши відповідний метод класу UnsplashAPI).\n// Додай лоадер під час завантаження даних з бекенда.\n\n// Не забудь про відповідні перевірки і сповіщення при роботі з запитами і з формою.\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { UnsplashAPI } from './UnsplashAPI';\nimport { createGalleryCard } from './createGalleryCard';\nimport Pagination from 'tui-pagination'; /* ES6 */\nimport 'tui-pagination/dist/tui-pagination.min.css';\n\nimport { showElement, hideElement } from '../module-11/render-functions';\n\nconst loader = document.querySelector('.loader');\n\nconst galleryElem = document.querySelector('.gallery');\nconst formElem = document.querySelector('.js-search-form');\nconst container = document.getElementById('tui-pagination-container');\nconst pagination = new Pagination(container, {\n  totalItems: 0,\n  itemsPerPage: 12,\n  visiblePages: 5,\n  page: 1,\n});\nconst page = pagination.getCurrentPage();\n\nformElem.addEventListener('submit', onFormSubmit);\n\nconst api = new UnsplashAPI();\n\npagination.on('afterMove', getPopularPhotos);\n\napi.fetchPopularPhotos(page).then(data => {\n  galleryElem.innerHTML = createGalleryCard(data.results);\n\n  pagination.reset(data.total);\n});\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n\n  const inputValue = event.target.elements.query.value.trim();\n\n  if (!inputValue) {\n    iziToast.warning({\n      message: 'Input can not be empty',\n    });\n\n    return;\n  }\n\n  pagination.off('afterMove', getPopularPhotos);\n  pagination.off('afterMove', getPhotosByQuery);\n\n  api.query = inputValue;\n\n  showElement(loader);\n  try {\n    const data = await api.fetchPhotosByQuery(page);\n    if (data.results.length === 0) {\n      iziToast.warning({\n        message: 'Images not found. Try another query',\n        position: 'center',\n      });\n      return;\n    }\n\n    iziToast.success({\n      message: `There are ${data.total} images`,\n    });\n\n    pagination.reset(data.total);\n\n    galleryElem.innerHTML = createGalleryCard(data.results);\n\n    pagination.on('afterMove', getPhotosByQuery);\n  } catch (error) {\n    console.log(error);\n\n    iziToast.error({\n      message: error.message || 'Sorry, something wrong',\n    });\n  } finally {\n    hideElement(loader);\n    formElem.reset();\n  }\n}\n\nasync function getPopularPhotos(event) {\n  const currentPage = event.page;\n  try {\n    const data = await api.fetchPopularPhotos(currentPage);\n\n    galleryElem.innerHTML = createGalleryCard(data.results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getPhotosByQuery(event) {\n  const currentPage = event.page;\n  try {\n    const data = await api.fetchPhotosByQuery(currentPage);\n\n    galleryElem.innerHTML = createGalleryCard(data.results);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["UnsplashAPI","__privateAdd","_BASE_URL","_API_KEY","_query","page","data","axios","__privateGet","error","newQuery","__privateSet","createGalleryCard","arr","alt_description","small","description","loader","galleryElem","formElem","container","pagination","Pagination","onFormSubmit","api","getPopularPhotos","event","inputValue","iziToast","getPhotosByQuery","showElement","hideElement","currentPage"],"mappings":"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"}